// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Prisma schema for PayrollPro demo backend (SQLite)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id        String  @id @default(cuid())
  name      String  @unique
  createdAt DateTime @default(now())
  users     User[]
}

model User {
  id            String   @id @default(cuid())
  username      String   @unique
  email         String   @unique
  passwordHash  String
  role          String   @default("employee")
  fullName      String
  phone         String?
  department    String?
  employeeId    String   @unique
  lastLoginAt   DateTime?
  company       Company  @relation(fields: [companyId], references: [id])
  companyId     String
  // 2FA
  twoFAEnabled  Boolean  @default(false)
  twoFASecret   String?
  recoveryCodes RecoveryCode[]
  // relations
  sessions      Session[]
  payrolls      PayrollEntry[]
  reports       Report[]
  taxProfile    EmployeeTaxProfile?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Session {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  companyId   String
  userAgent   String?
  ipAddress   String?
  createdAt   DateTime @default(now())
  lastActive  DateTime @default(now())
}

model RecoveryCode {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  code      String   @unique
  usedAt    DateTime?
  createdAt DateTime @default(now())
}

model PayrollEntry {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  companyId    String
  periodStart  DateTime
  periodEnd    DateTime
  baseSalary   Int      // cents
  bonus        Int      // cents
  deductions   Int      // cents
  netPay       Int      // cents
  createdAt    DateTime @default(now())
}

model EmployeeTaxProfile {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique
  companyId    String
  pan          String?
  regime       String   @default("old") // old/new
  section80C   Int      @default(0) // cents
  hraExempt    Int      @default(0) // cents
  ltaExempt    Int      @default(0) // cents
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model TaxSlab {
  id           String   @id @default(cuid())
  companyId    String
  regime       String   // old/new
  minIncome    Int      // cents inclusive
  maxIncome    Int      // cents inclusive
  rateBps      Int      // basis points (e.g., 500 = 5%)
}

model Report {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  companyId  String
  type       String   // payslip, yearend, etc.
  period     String
  createdAt  DateTime @default(now())
}
